{"name":"PesapalJS","tagline":"Integrate PesaPal into your Node application","body":"### Goal\r\n\r\nMake it easy to integrate [PesaPal](https://www.pesapal.com) into a website or mobile app AND most importantly allow one\r\nto customize the payment user interface.\r\n\r\n### Core Features\r\n- `paymentListener`: `express` middleware that parses PesaPal payment notifications.\r\n\r\n- `getPaymentStatus(options, callback)` : Get status of a payment. `options` should contain either a `reference` alone or a `reference` and `transaction` together.\r\n\r\n- `getPaymentDetails(options, callback`): Get all information about a payment. `options` should contain a `reference` and a `transaction`.\r\n\r\n- `getPaymentURL(order, callbackURI)`: Get a signed URL to the PesaPal payment page.\r\n\r\n- `makeOrder(order, paymentMethod, callback)`: Prepare an order for payment on a custom UI.\r\n\r\n- `payOrder(order, paymentDetails, callback)`: After a call to `makeOrder`, pay an order with details collected through a custom UI.\r\n\r\n### Usage summary\r\n\r\n###### Setup\r\n```javascript\r\n\r\nvar PesaPal = require('pesapaljs').init({\r\n    key: CONSUMER_KEY,\r\n    secret: CONSUMER_SECRET,\r\n    debug: true // false in production!\r\n});\r\n\r\n```\r\nWhen the `debug` option is set, `pesapaljs` will use the `demo.pesapal.com/*` endpoints.\r\n    \r\n###### Listen for payment notifications\r\n```javascript\r\n\r\n// Listen for IPNs (With an express app)\r\napp.get('/ipn', PesaPal.paymentListener, function(req, res) { \r\n    var payment = req.payment;\r\n    // do shit with payment {transaction, method, status, reference}\r\n    \r\n    // DO NOT res.send()\r\n});\r\n\r\n```\r\n    \r\n###### Check Payment info\r\n```javascript\r\n\r\nvar options = {\r\n    reference: \"42314123\", // Send this\r\n    transaction: \"175c6485-0948-4cb9-8d72-05a2c3f25be5\" // or both.\r\n};\r\nPesaPal.getPaymentStatus(options, function(error, status}{\r\n    // do shit\r\n});\r\n\r\nPesaPal.getPaymentDetails(options, function (error, payment) {\r\n    //payment -> {transaction, method, status, reference}\r\n    //do shit\r\n});\r\n\r\n```\r\n    \r\n###### Make a direct order\r\nMake your customer pay on PesaPal's page:\r\n\r\n```javascript\r\n\r\nvar customer = new PesaPal.Customer(\"kariuki@pesapal.com\");\r\nvar order = new PesaPal.Order(\"42314123\", customer, \"Ma ndazi\", 1679.50, \"KES\", \"MERCHANT\");\r\n\r\n// Redirect user to PesaPal\r\nvar url = PesaPal.getPaymentURL(order, \"http://mysite.co.ke/callback\");\r\n// send it to an iframe ?\r\n\r\n```\r\n\r\nOr make your own awesome payment UI (web page, mobile app front-end, etc.):\r\n\r\n```javascript\r\n\r\nvar customer = new PesaPal.Customer(\"john@pesapal.com\");\r\nvar order = new PesaPal.Order(\"WSDE0RFCC\", customer, \"Maziwa\", 100, \"KES\", \"MERCHANT\");\r\n\r\n// place order directly with your own UI\r\nPesaPal.makeOrder(order, PesaPal.PaymentMethod.Airtel, function(error, order) {\r\n    // Get payment details from user, DB - like their credit card info ;) or whatever\r\n    \r\n    // ...\r\n    \r\n    PesaPal.payOrder(order, new PesaPal.MobileMoney(\"254728988983\",\"DEWEDWED\"), function (error, reference, transactionId) {\r\n        // do shit\r\n    });\r\n});\r\n```\r\n\r\n### Contributing\r\n\r\n1. Fork this repo and make changes in your own fork.\r\n2. Commit your changes and push to your fork `git push origin master`\r\n3. Create a new pull request and submit it back to the project.\r\n\r\n\r\n### Bugs & Issues\r\n\r\nTo report bugs (or any other issues), use the [issues page](https://github.com/aksalj/pesapaljs/issues).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}